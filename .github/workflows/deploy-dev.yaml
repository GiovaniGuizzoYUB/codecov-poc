name: Main Branch Merge - Deploy Dev
on:
  push:
    branches:
      - main

env:
  NODE_VERSION: '20'
  GO_VERSION: '1.22'
  PYTHON_VERSION: '3.10'
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'temurin'

jobs:
  setup_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js
        id: node_setup
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

  typescript_tests:
    needs: setup_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install TypeScript dependencies
        run: npm install
        working-directory: typescript

      - name: Build TypeScript Application
        run: npm run build
        working-directory: typescript

      - name: Start TypeScript Application
        run: npm run start &
        working-directory: typescript

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          working-directory: typescript

      - name: Upload Cypress coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: cypress-tests
          files: typescript/coverage/lcov.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Delete Cypress Coverage Info
        run: rm -rf typescript/.nyc_output typescript/coverage

      - name: Run Jest tests
        run: npm run test -- --coverage
        working-directory: typescript
    
      - name: Upload Jest coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: jest-tests
          files: typescript/coverage/coverage-final.json
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  java_tests:
    needs: setup_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build with Gradle
        run: ./gradlew build --no-daemon
        working-directory: java

      - name: Run JUnit tests
        run: ./gradlew test --no-daemon
        working-directory: java

      - name: Upload Java code coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: java-tests
          files: java/app/build/reports/jacoco/test/jacocoTestReport.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  go_tests:
    needs: setup_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Go dependencies
        run: |
          cd go
          go mod download

      - name: Run Go tests
        run: |
          cd go
          go test -v -coverprofile=coverage.out ./...

      - name: Upload Go coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: go-tests
          file: go/coverage.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  python_tests:
    needs: setup_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Create and Activate Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate
          cd python
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python tests
        run: |
          coverage run -m pytest

      - name: Upload Python coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          flags: python-tests
          files: python/.coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
